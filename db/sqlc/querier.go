// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	BatchPendingTasks(ctx context.Context, limit int32) ([]OutboxEvent, error)
	CreateHistory(ctx context.Context, arg CreateHistoryParams) (History, error)
	CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error)
	CreateOrderItem(ctx context.Context, arg CreateOrderItemParams) (OrderItem, error)
	CreateOutboxEvent(ctx context.Context, arg CreateOutboxEventParams) (OutboxEvent, error)
	CreatePayment(ctx context.Context, arg CreatePaymentParams) (Payment, error)
	DeleteHistory(ctx context.Context, id int32) error
	DeleteOrder(ctx context.Context, id pgtype.UUID) error
	DeleteOrderItem(ctx context.Context, id int32) error
	DeleteOutboxEvent(ctx context.Context, id pgtype.UUID) error
	DeletePayment(ctx context.Context, id pgtype.UUID) error
	FetchOnePendingForUpdate(ctx context.Context) (OutboxEvent, error)
	FetchOnePendingForUpdateWithID(ctx context.Context, id pgtype.UUID) (OutboxEvent, error)
	GetHistoriesByOrderID(ctx context.Context, orderID pgtype.UUID) ([]History, error)
	GetHistory(ctx context.Context, id int32) (History, error)
	GetOrder(ctx context.Context, id pgtype.UUID) (Order, error)
	GetOrderItem(ctx context.Context, id int32) (OrderItem, error)
	GetOrderItemsByOrderID(ctx context.Context, orderID pgtype.UUID) ([]OrderItem, error)
	GetOutboxEvent(ctx context.Context, id pgtype.UUID) (OutboxEvent, error)
	GetPayment(ctx context.Context, id pgtype.UUID) (Payment, error)
	GetPaymentsByOrderID(ctx context.Context, orderID pgtype.UUID) ([]Payment, error)
	GetPendingOutboxEvents(ctx context.Context, limit int32) ([]OutboxEvent, error)
	IncrementRetryCount(ctx context.Context, id pgtype.UUID) error
	UpdateHistory(ctx context.Context, arg UpdateHistoryParams) (History, error)
	UpdateOrder(ctx context.Context, arg UpdateOrderParams) (Order, error)
	UpdateOrderItem(ctx context.Context, arg UpdateOrderItemParams) (OrderItem, error)
	UpdateOutboxEventStatus(ctx context.Context, arg UpdateOutboxEventStatusParams) (OutboxEvent, error)
	UpdatePayment(ctx context.Context, arg UpdatePaymentParams) (Payment, error)
}

var _ Querier = (*Queries)(nil)
