// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: inbox_events.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createInboxEvent = `-- name: CreateInboxEvent :one
INSERT INTO inbox_events (
    event_id
) VALUES (
             $1
         ) RETURNING event_id
`

func (q *Queries) CreateInboxEvent(ctx context.Context, eventID pgtype.UUID) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, createInboxEvent, eventID)
	var event_id pgtype.UUID
	err := row.Scan(&event_id)
	return event_id, err
}

const getProcessedEvent = `-- name: GetProcessedEvent :one
SELECT event_id FROM inbox_events WHERE event_id = $1 LIMIT 1
`

func (q *Queries) GetProcessedEvent(ctx context.Context, eventID pgtype.UUID) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, getProcessedEvent, eventID)
	var event_id pgtype.UUID
	err := row.Scan(&event_id)
	return event_id, err
}
